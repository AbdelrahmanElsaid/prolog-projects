***MISSION.txt***

PURPOSE

In this 1-week assignment, you will be learning more about the uses of Prolog by doing several tasks. The purpose of this assignment in particular is to be able to create different rules, use lists, and handle various types of input (not just inputs that are limited by facts). This assignment will also prepare you for some parts of the Week 3-4 Project.

BACKGROUND AND MISSION

Like previously stated, this project has several different tasks that will need to be implemented. All the tasks deal with Trees and Lists and you will need to implement them all yourself, NO libraries allowed! And NO built in predicates are allowed! Here are all the following tasks that need to be completed:
Before I state the tasks let me explain what +, -, and ? mean when it comes to the arguments in the following rules. + indicates that whenever this rule is given a non-variable term will always go as an argument, - indicates that there will always be a variable for that argument when that rule is run, and ? means that variables and non variables can be an argument when that rule is run. If you are confused as to what these mean, please see the sample_interaction file.

1) Count the number of nodes in a binary integer tree: count_nodes(+Tree, -Count)
2) Check if a value is a leaf in a binary integer tree: tree_leaf(+Tree, +Value)
3) Increment all leaf values of a binary integer tree: increment_tree(+TreeOriginal. ?TreeNew)
4) Find all subtrees of a binary integer tree: subtree(+Tree, -Subtree)
5) Find the length of a list: list_length(+List, -Len).
6) Check if an element is in a list: list_element(+List, +Value).
7) Increment all elements in a list: increment_list(+LOriginal, LNew)
8) Find the last element in a list: list_last(+List, ?Value)
9) Find all suffixes of a list: list_suffix(+L, -Suffix)
10) Concatenate two Lists: list_concatenation(+L1, +L2, -LConacat)

SOURCE: 

Problems taken from Peter Szeredi’s Semantics and Declarative Technologies Course.

DESCRIPTION OF FILES:

MISSION.txt - this file! Gives directions on what this week's project.
sample_interaction.txt - Sample interaction for each of the tasks, so you can see what inout to expect as well as output.

GRADING SCHEME:

Your grade for this assignment will be based 85% on the functionality of the
program itself, 5% on how well you commented your code, and
10% on your README file. As always there are opportunities for extra credit, for
going above and beyond and clearly documenting what you did in your README. The
percentage of extra credit will be determined on what you did but it will never
exceed 10% of the final grade, and you are not guaranteed extra credit just 
because you documented something for extra credit. Points for commenting your
code, README, and extra credit are at the sole discretion of the grader. NOTE:
We will grade your code using the installation of swipl on the CSUG servers, 
so make sure your code runs on that!

HOW TO SUBMIT:

To submit, make a ZIP file containing your source code (.pl file) along with
your README.txt:

Then go to Blackboard to the CSC 173 Class homepage, navigate to Course
Materials, and click on "Prolog Week 2”. Upload your ZIP file at the link
before 11:00PM on Wednesday, October 21. Note that we will NOT be accepting any
late submissions, so please make sure to submit something to Blackboard before
this! Even if your program is incomplete, it is better to submit
something before the due time than nothing, as you risk getting a 0 for this
assignment.

HELP/CONTACT:

The primary grader and contact for this assignment is Kevin Gerami who can
be reached at kevingerami@rochester.edu. However, due to our new Piazza discussion
board that we have I recommend that you ask your questions on there and I will answer
them there so if other students have the same question then they can see the response.
However, if you have a more personal question you are more than welcome to email
me directly.

And as always, if you are having a tough time with the code itself I strongly
encourage you to go to CSUG tutoring in Hylan 301 with tutors there Monday-Friday.
Their schedule can be found here: http://csug.rochester.edu/ugc/tutoring/.
